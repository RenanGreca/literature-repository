# This is a basic workflow to help you get started with Actions

name: Merge JSON

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [ main ]
    types: [ closed ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Merge JSON files into `ordered_output.json`
        run: |
          jq -s '.' ./_data/primary_jsons/*.json > ./_data/output.json
          jq 'sort_by(.date|split("-")|map(tonumber))' ./_data/output.json > ./_data/ordered_output.json
          jq 'sort_by(.year|map(tonumber))' ordered_output.json > primaries.json
          rm output.json
          rm ordered_output.json
          
      - name: Commit file
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add ./_data/primaries.json
          git commit -m "Updated primaries.json"
          echo "::set-output name=push::true"
      
      - name: Merge JSONs from secondary directory
        run: |
          jq -s '.' ./_data/secondary_jsons/*.json > ./_data/output.json
          jq 'sort_by(.date|split("-")|map(tonumber))' ./_data/output.json > ./_data/ordered_output.json
          jq 'sort_by(.year|map(tonumber))' ordered_output.json > secondaries.json
          rm output.json
          rm ordered_output.json

      - name: Commit file
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add ./_data/secondaries.json
          git commit -m "Updated secondaries.json"
          echo "::set-output name=push::true"
      
      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

          
