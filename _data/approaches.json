[{"key": "history-based", "type": "approach", "category": "Information", "name": "History-based", "papers": {"tcp": ["srikanth_test_2016", "aman_application_2016", "kwon_cost-effective_2017", "haghighatkhah_test_2018", "busjaeger_learning_2016", "marijan_effect_2016", "yu_terminator_2019", "strandberg_experience_2016", "najafi_improving_2019"], "tcs": ["kwon_cost-effective_2017", "machalica_predictive_2018", "najafi_improving_2019"], "tsr": [], "tsa": []}, "description": "Uses information from previous testing cycles to decide about test case relevance."}, {"key": "change-based", "type": "approach", "category": "Information", "name": "Change-based", "papers": {"tcp": ["strandberg_experience_2016"], "tcs": ["zhang_hybrid_2018", "vasic_file-level_2017", "fu_resurgence_2019", "shi_understanding_2019", "celik_regression_2017", "ramler_tool_2017", "yilmaz_case_2018", "celik_regression_2018", "guo_decomposing_2019", "eda_efficient_2019", "zhang_comparing_2022", "oqvist_extraction-based_2016", "chen_context-aware_2021", "cingil_black-box_2022", "greca_comparing_2022"], "tsr": ["eda_efficient_2019"], "tsa": []}, "description": "Uses changes between versions to identify the relevant test cases."}, {"key": "coverage-based", "type": "approach", "category": "Information", "name": "Coverage-based", "papers": {"tcp": ["bach_coverage-based_2017", "busjaeger_learning_2016", "yu_terminator_2019", "ouriques_test_2018", "lubke_selecting_2020", "magalhaes_hsp_2020"], "tcs": ["bach_coverage-based_2017", "ramler_tool_2017", "lubke_selecting_2020", "zhong_testsage:_2019", "magalhaes_hsp_2020"], "tsr": ["noemmer_evaluation_2020", "shi_evaluating_2018"], "tsa": ["yoshida_fsx_2016"]}, "description": "Uses structural coverage information, whereby coverage can be of statement, method, class, file, etc."}, {"key": "cost-aware", "type": "approach", "category": "Information", "name": "Cost-aware", "papers": {"tcp": ["tahvili_dynamic_2016", "lu_how_2016", "yu_terminator_2019", "wang_enhancing_2016", "tahvili_cost-benefit_2016", "zhou_parallel_2022"], "tcs": ["tahvili_dynamic_2016", "chen_multi-objective_2021"], "tsr": [], "tsa": []}, "description": "Utilizes test case cost or time information to assess test relevance."}, {"key": "requirements-based", "type": "approach", "category": "Information", "name": "Requirements-based", "papers": {"tcp": ["srikanth_requirements_2016"], "tcs": [], "tsr": ["goyal_test_2019"], "tsa": []}, "description": "Relate tests with project-sensitive information, such as requirements and risk assessments."}, {"key": "manual_classification", "type": "approach", "category": "Information", "name": "Manual classification", "papers": {"tcp": ["tahvili_cost-benefit_2016", "tahvili_dynamic_2016", "yu_terminator_2019"], "tcs": ["tahvili_dynamic_2016"], "tsr": [], "tsa": []}, "description": "Requires at least some information that must be manually inputted by an expert."}, {"key": "model-based", "type": "approach", "category": "Information", "name": "Model-based", "papers": {"tcp": ["buchgeher_improving_2016", "ouriques_test_2018"], "tcs": ["buchgeher_improving_2016"], "tsr": [], "tsa": []}, "description": "Informs the test technique using behavioural or architectural models."}, {"key": "trace-based", "type": "approach", "category": "Information", "name": "Trace-based", "papers": {"tcp": [], "tcs": ["vost_trace-based_2016", "zhong_testsage:_2019"], "tsr": [], "tsa": []}, "description": "Provides inputs and keeps track of the effects of those inputs throughout the program."}, {"key": "fault-based", "type": "approach", "category": "Information", "name": "Fault-based", "papers": {"tcp": ["marijan_effect_2016", "zhu_test_2018"], "tcs": ["leong_assessing_2019", "chen_multi-objective_2021", "cingil_black-box_2022"], "tsr": [], "tsa": []}, "description": "Utilizes information related to fault detection or failure beaviour."}, {"key": "test_code", "type": "approach", "category": "Information", "name": "Test code", "papers": {"tcp": ["peng_empirically_2020", "noor_similarity-based_2016", "miranda_fast_2018", "greca_comparing_2022"], "tcs": [], "tsr": ["cruciani_scalable_2019"], "tsa": []}, "description": "Uses the plain text source code of the test cases."}, {"key": "load_factor", "type": "approach", "category": "Information", "name": "Load factor", "papers": {"tcp": ["buchgeher_improving_2016"], "tcs": ["buchgeher_improving_2016"], "tsr": [], "tsa": []}, "description": "Indicates what parts of the SUT are most used by different services and components."}, {"key": "author_count", "type": "approach", "category": "Information", "name": "Author count", "papers": {"tcp": [], "tcs": ["leong_assessing_2019"], "tsr": [], "tsa": []}, "description": "Number of authors associated with a certain part of the SUT."}, {"key": "execution_context", "type": "approach", "category": "Information", "name": "Execution context", "papers": {"tcp": [], "tcs": ["chen_context-aware_2021", "celik_regression_2017"], "tsr": [], "tsa": []}, "description": "Considers environment data such as libraries, APIs, databases, operating system, etc."}, {"key": "similarity___distance-based", "type": "approach", "category": "Algorithm", "name": "Similarity / distance-based", "papers": {"tcp": ["zhou_beating_2020", "haghighatkhah_test_2018", "busjaeger_learning_2016", "noor_similarity-based_2016", "ouriques_test_2018", "miranda_fast_2018", "aman_application_2016", "greca_comparing_2022"], "tcs": [], "tsr": ["cruciani_scalable_2019"], "tsa": []}, "description": "Assesses test cases based on their similarity, with the objective of diversifying the suite."}, {"key": "search-based", "type": "approach", "category": "Algorithm", "name": "Search-based", "papers": {"tcp": ["peng_empirically_2020", "lu_how_2016", "wang_enhancing_2016", "correia_motsd_2019", "zhou_parallel_2022", "magalhaes_hsp_2020"], "tcs": ["pradhan_search-based_2016", "magalhaes_automatic_2016", "garousi_multi-objective_2018", "correia_motsd_2019", "zarges_artificial_2021", "magalhaes_hsp_2020"], "tsr": ["chi_multi-level_2017"], "tsa": []}, "description": "Utilizes search-based algorithms, such as genetic or nature-inspired ones"}, {"key": "machine_learning-based", "type": "approach", "category": "Algorithm", "name": "Machine learning-based", "papers": {"tcp": ["wu_time_2019", "busjaeger_learning_2016", "abdelkarim_tcp-net_2022", "lima_multi-armed_2022", "yaraghi_scalable_2022", "bertolino_learning--rank_2020", "elsner_empirically_2021", "bagherzadeh_reinforcement_2022", "omri_learning_2022", "spieker_reinforcement_2017"], "tcs": ["machalica_predictive_2018", "zhang_comparing_2022", "elsner_empirically_2021", "mehta_data-driven_2021"], "tsr": ["philip_fastlane:_2019"], "tsa": []}, "description": "Trains a ML model using historical or other data. Includes supervised, unsupervised and reinforcement learning methods."}, {"key": "graph-based", "type": "approach", "category": "Algorithm", "name": "Graph-based", "papers": {"tcp": ["ouriques_test_2018"], "tcs": ["hirzel_graph-walk-based_2016", "azizi_retest_2018", "ramler_tool_2017", "yilmaz_case_2018", "celik_regression_2018", "bertolino_learning--rank_2020"], "tsr": [], "tsa": []}, "description": "Creates a graph representation of the SUT and utilizes graph theory algorithms to solve problems."}, {"key": "greedy", "type": "approach", "category": "Algorithm", "name": "Greedy", "papers": {"tcp": ["lu_how_2016", "zhou_parallel_2022", "li_aga_2021"], "tcs": [], "tsr": ["noemmer_evaluation_2020", "bach_coverage-based_2017"], "tsa": []}, "description": "Utilizes greedy algorithms and heuristics (usually based on coverage or similarity information)."}, {"key": "constraints-based", "type": "approach", "category": "Algorithm", "name": "Constraints-based", "papers": {"tcp": [], "tcs": ["eda_efficient_2019"], "tsr": ["gotlieb_using_2017", "eda_efficient_2019"], "tsa": []}, "description": "Utilizes constraint programming paradigm."}, {"key": "bloom_filter_or_window-based", "type": "approach", "category": "Algorithm", "name": "Bloom filter or window-based", "papers": {"tcp": ["schwartz_cost-effective_2016", "kwon_cost-effective_2017", "pan_dynamic_2020"], "tcs": ["kwon_cost-effective_2017"], "tsr": [], "tsa": []}, "description": "Utilizes Bloom filter data structures and time windows to filter out tests that  fail only once."}]