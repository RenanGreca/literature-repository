{"year":2018,"authors":"Chen, Junjie; Lou, Yiling; Zhang, Lingming Lu; Zhou, Jianyi; Wang, Xiaoleng; Hao, Dan; Zhang, Lingming Lu","title":"Optimizing Test Prioritization via Test Distribution Analysis","bibtex":"chen_optimizing_2018","abstract":"Test prioritization aims to detect regression faults faster via reordering test executions, and a large number of test prioritization techniques have been proposed accordingly. However, test prioritization effectiveness is usually measured in terms of the average percentage of faults detected concerned with the number of test executions, rather than the actual regression testing time, making it unclear which technique is optimal in actual regression testing time. To answer this question, this paper first conducts an empirical study to investigate the actual regression testing time of various prioritization techniques. The results reveal a number of practical guidelines. In particular, no prioritization technique can always perform optimal in practice. To achieve the optimal prioritization effectiveness for any given project in practice, based on the findings of this study, we design learning-based Predictive Test Prioritization (PTP). PTP predicts the optimal prioritization technique for a given project based on the test distribution analysis (i.e., the distribution of test coverage, testing time, and coverage per unit time). The results show that PTP correctly predicts the optimal prioritization technique for 46 out of 50 open-source projects from GitHub, outperforming stateof- the-art techniques significantly in regression testing time, e.g., 43.16% to 94.92% improvement in detecting the first regression fault. Furthermore, PTP has been successfully integrated into the practical testing infrastructure of Baidu (a search service provider with over 600M monthly active users), and received positive feedbacks fromthe testing team of this company, e.g., saving beyond 2X testing costs with negligible overheads.","published_in":"ESEC/FSE 2018: Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering","publisher":"ACM","source":"Query","doi":"https://doi.org/10.1145/3236024.3236053","date":"2018-10-26","categories":"Technique analysis","tcp":"X","tcs":"","tsr":"","tsa":"","context":"General","ind_motivation":"TRUE","ind_evaluation":"TRUE","exp_subjects":"Open-source Java projects (up to 9691 TCs) plus undisclosed projects from Baidu (up to 4139 TCs)","ind_partner":"Baidu (China)","ind_author":"FALSE","prac_feedback":"FALSE","avai_tool":"TRUE","put_practice":"TRUE","suppl_url":"https://github.com/JunjieChen/PTP","included":"TRUE","approach":"Analyzes test coverage to predict the optimal TCP technique for a given project.","metrics":"APFDc, FT, LT, AT","open_challenges":""}
