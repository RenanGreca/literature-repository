{"year":2019,"authors":"Wu, Zhaolin; Yang, Yang; Li, Zheng; Zhao, Ruilian","title":"A Time Window Based Reinforcement Learning Reward for Test Case Prioritization in Continuous Integration","bibtex":"wu_time_2019","abstract":"Continuous integration refers to the practice of merging the working copies of all developers into the mainline frequently. Regression testing for each mergence is characterized by continually changing test suite, limited execution time, and fast feedback, which demands new test optimization techniques. Reinforcement learning is introduced for test case prioritization to save computing resources in continuous integration environment, where a reasonable reward function is highly important for learning strategy, since the process of reinforcement learning is a reward-guided behavior. In this paper, APHFW, a novel reward function is proposed by using partial historical information of test cases effectively for fast feedback and cost reduction. The experiments are based on three open-source data sets, and the results show that the proposed reward function is more cost-effect than other reinforcement learning rewards in continuous integration environment.","published_in":"Internetware '19: Proceedings of the 11th Asia-Pacific Symposium on Internetware","publisher":"ACM","source":"Query","doi":"https://doi.org/10.1145/3361242.3361258","date":"2019-10-28","categories":"Orchestration technique","tcp":"X","tcs":"","tsr":"","tsa":"","context":"Continuous integration in large scale software","ind_motivation":"TRUE","ind_evaluation":"TRUE","exp_subjects":"The Google dataset of testing results\" from Elbaum and Penix (5555 TCs) plus datasets from ABB Robotics (up to 2086 TCs)","ind_partner":"","ind_author":"FALSE","prac_feedback":"FALSE","avai_tool":"FALSE","put_practice":"FALSE","suppl_url":"","included":"TRUE","approach":"TCP by Reinforcement Learning, the paper experiments different windows on which the reward is calculated, in cmparison with Speiker (only recent observation) and He (full history)","metrics":"NAPFD\nTime cost of prioritization function","open_challenges":"use windows of dynamic size"}
