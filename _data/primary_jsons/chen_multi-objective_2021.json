{"type": "primary", "year": "2021", "authors": "Chen, Yizhen; Chen, Mei-Hwa", "author_keys": ["chen_yizhen", "chen_mei-hwa"], "title": "Multi-objective regression test selection", "bibtex": "chen_multi-objective_2021", "abstract": "Regression testing is challenging, yet essential, for maintaining evolving complex software. Efficient regression testing that minimizes the regression testing time and maximizes the detection of the regression faults is in great demand for fast-paced software development. Many research studies have been proposed for selecting regression tests under a time constraint. This paper presents a new approach that first evaluates the fault detectability of each regression test based on the extent to which the test is impacted by the changes. Then, two optimization algorithms are proposed to optimize a multi-objective function that takes fault detectability and execution time of the test as inputs to select an optimal subset of the regression tests that can detect maximal regression faults under a given time constraint. The validity and efficacy of the approach were evaluated using two empirical studies on industrial systems. The promising results suggest that the proposed approach has great potential to ensure the quality of the fast-paced evolving systems. \u00a9 2021, EasyChair. All rights reserved.", "published_in": "SEDE 2020. 29th International Conference on Software Engineering and Data Engineering", "publisher": "EasyChair", "doi": "10.29007/7z5n", "date": "2021-03-01", "tcp": "", "tcs": "X", "tsr": "", "tsa": "", "ind_motivation": "TRUE", "ind_evaluation": "TRUE", "exp_subjects": "Industrial proprietary, small scale\n\nIdea Thread Mapper (142k LOC, 397-412 TCs)\n\nMicroarray (21k LOC, 84 TCs)\n\nCEDCD (32k LOC, 190 TCs)", "prog_language": "Unclear", "ind_partner": "Idea Thread Mapper (USA)\n\nNational Cancer Institute (USA)", "ind_author": "FALSE", "prac_feedback": "FALSE", "avai_tool": "FALSE", "put_practice": "FALSE", "suppl_url": "", "approach": "Multi-objective (fault detection + cost constrained)", "metrics": "faults detected per given budget", "open_challenges": "Define program states for other languages."}