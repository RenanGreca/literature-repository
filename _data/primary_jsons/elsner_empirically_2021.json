{
    "type": "primary",
    "year": "2021",
    "authors": "Elsner, Daniel; Hauer, Florian; Pretschner, Alexander; Reimer, Silke",
    "author_keys": [
        "elsner_daniel",
        "hauer_florian",
        "pretschner_alexander",
        "reimer_silke"
    ],
    "title": "Empirically evaluating readily available information for regression test optimization in continuous integration",
    "bibtex": "elsner_empirically_2021",
    "abstract": "Regression test selection (RTS) and prioritization (RTP) techniques aim to reduce testing efforts and developer feedback time after a change to the code base. Using various information sources, including test traces, build dependencies, version control data, and test histories, they have been shown to be effective. However, not all of these sources are guaranteed to be available and accessible for arbitrary continuous integration (CI) environments. In contrast, metadata from version control systems (VCSs) and CI systems are readily available and inexpensive. Yet, corresponding RTP and RTS techniques are scattered across research and often only evaluated on synthetic faults or in a specific industrial context. It is cumbersome for practitioners to identify insights that apply to their context, let alone to calibrate associated parameters for maximum cost-effectiveness. This paper consolidates existing work on RTP and unsafe RTS into an actionable methodology to build and evaluate such approaches that exclusively rely on CI and VCS metadata. To investigate how these approaches from prior research compare in heterogeneous settings, we apply the methodology in a large-scale empirical study on a set of 23 projects covering 37,000 CI logs and 76,000 VCS commits. We find that these approaches significantly outperform established RTP baselines and, while still triggering 90% of the failures, we show that practitioners can expect to save on average 84% of test execution time for unsafe RTS. We also find that it can be beneficial to limit training data, features from test history work better than change-based features, and, somewhat surprisingly, simple and well-known heuristics often outperform complex machine-learned models.\n",
    "published_in": "ISSTA 2021: Proceedings of the 30th ACM SIGSOFT International Symposium on Software Testing and Analysis",
    "publisher": "ACM",
    "doi": "10.1145/3460319.3464834",
    "date": "2021-07-11",
    "tcp": "X",
    "tcs": "X",
    "tsr": "",
    "tsa": "",
    "ind_motivation": "TRUE",
    "ind_evaluation": "TRUE",
    "exp_subjects": "3 Industrial projects \n\nplus\n\n20 open-source projects from RTPtorrent",
    "prog_language": "C, C++, Java, DSL, JavaScript",
    "ind_partner": "IVU Traffic Technologies",
    "ind_author": "TRUE",
    "prac_feedback": "TRUE",
    "avai_tool": "TRUE\n\nReplication package\n\nIt is a methodology, it has been released to IVU as a web service, unclear in which format it is released in the replication package",
    "put_practice": "TRUE",
    "suppl_url": "https://doi.org/10.6084/m9.figshare.13656443",
    "approach": "Compare predictive capabilities of ML features for RTP and RTS exclusively relying on CI and VCS\nmetadata \nThey observe that test history is important and simple models can outperform more complex ones",
    "info_approach": "",
    "alg_approach": "Machine learning-based",
    "metrics": "APFDùëê + sensitivity analysis\nTraining time",
    "effe_metrics": "",
    "effi_metrics": "Measuring time/cost",
    "other_metrics": "",
    "open_challenges": "Extend  application of their methodology in IVU"
}