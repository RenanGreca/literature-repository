{"type": "primary", "year": "2022", "authors": "Greca, Renan; Miranda, Breno; Gligoric, Milos; Bertolino, Antonia", "author_keys": ["greca_renan", "miranda_breno", "gligoric_milos", "bertolino_antonia"], "title": "Comparing and combining file-based selection and similarity-based prioritization towards regression test orchestration", "bibtex": "greca_comparing_2022", "abstract": "Test case selection (TCS) and test case prioritization (TCP) techniques can reduce time to detect the first test failure. Although these techniques have been extensively studied in combination and isolation, they have not been compared one against the other. In this paper, we perform an empirical study directly comparing TCS and TCP approaches, represented by the tools Ekstazi and FAST, respectively. Furthermore, we develop the first combination, named Fastazi, of file-based TCS and similarity-based TCP and evaluate its benefit and cost against each individual technique. We performed our experiments using 12 Java-based open-source projects. Our results show that, in the median case, the combined approach detects the first failure nearly two times faster than either Ekstazi alone (with random test ordering) or FAST alone (without TCS). Statistical analysis shows that the effectiveness of Fastazi is higher than that of Ekstazi, which in turn is higher than that of FAST. On the other hand, FAST adds the least overhead to testing time, while the difference between the additional time needed by Ekstazi and Fastazi is negligible. Fastazi can also improve failure detection in scenarios where the time available for testing is restricted.", "published_in": "AST '22: Proceedings of the 3rd ACM/IEEE International Conference on Automation of Software Test", "publisher": "ACM/IEEE", "doi": "10.1145/3524481.3527223", "date": "2022-07-19", "tcp": "X", "tcs": "X", "tsr": "", "tsa": "", "ind_motivation": "TRUE", "ind_evaluation": "FALSE", "exp_subjects": "Academic dataset, small to medium scale\n\nDefects4J", "prog_language": "Java", "ind_partner": "", "ind_author": "FALSE", "prac_feedback": "FALSE", "avai_tool": "TRUE\n\nReplication package, well-documented", "put_practice": "FALSE", "suppl_url": "https://zenodo.org/record/5851288#.Yw3LmS8RqLc\n\nhttps://github.com/Fastazi/Fastazi/tree/1.1", "approach": "change-based selection +\nsimilarity-based prioritization", "metrics": "APFD, TTFF, fault detection per budget, selection + prioritization time", "open_challenges": "Experiment with more realistic software/datasets; further combine techniques such as TSR/TSA for orchestration."}