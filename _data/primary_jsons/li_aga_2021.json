{"type": "primary", "year": "2021", "authors": "Li, Feng; Zhou, Jianyi; Li, Yinzhu; Hao, Dan; Zhang, Lu", "author_keys": ["li_feng", "zhou_jianyi", "li_yinzhu", "hao_dan", "zhang_lu"], "title": "AGA: An Accelerated Greedy Additional Algorithm for Test Case Prioritization", "bibtex": "li_aga_2021", "abstract": "In recent years, many test case prioritization (TCP) techniques have been proposed to speed up the process of fault detection. However, little work has taken the efficiency problem of these techniques into account. In this paper, we target the Greedy Additional (GA) algorithm, which has been widely recognized to be effective but less efficient, and try to improve its efficiency while preserving effectiveness. In our Accelerated GA (AGA) algorithm, we use some extra data structures to reduce redundant data accesses in the GA algorithm and thus the time complexity is reduced from O(m2n) to O(kmn) when n > m, where m is the number of test cases, n is the number of program elements, and k is the iteration number. Moreover, we observe the impact of iteration numbers on prioritization efficiency on our dataset and propose to use a specific iteration number in the AGA algorithm to further improve the efficiency. We conducted experiments on 55 open-source subjects. In particular, we implemented each TCP algorithm with two kinds of widely-used input formats, adjacency matrix and adjacency list. Since a TCP algorithm with adjacency matrix is less efficient than the algorithm with adjacency list, the result analysis is mainly conducted based on TCP algorithms with adjacency list. The results show that AGA achieves 5.95X speedup ratio over GA on average, while it achieves the same average effectiveness as GA in terms of Average Percentage of Fault Detected (APFD). Moreover, we conducted an industrial case study on 22 subjects, collected from Baidu, and find that the average speedup ratio of AGA over GA is 44.27X, which indicates the practical usage of AGA in real-world scenarios.", "published_in": "IEEE Transactions on Software Engineering", "publisher": "IEEE", "doi": "10.1109/TSE.2021.3137929", "date": "2021-12-23", "tcp": "X", "tcs": "", "tsr": "", "tsa": "", "ind_motivation": "TRUE", "ind_evaluation": "TRUE \n(Baidu)", "exp_subjects": "55 open-source subjects (from 1,621 to 177,546 lines of code)\n+\nindustrial case study on 22 subjects (Baidu)", "prog_language": "Java", "ind_partner": "TRUE \n(Baidu)", "ind_author": "TRUE \n(Baidu)", "prac_feedback": "TRUE\n(\"we receive positive feedback from Baidu\")", "avai_tool": "TRUE\n\nReplication package, documented", "put_practice": "MAYBE\n(at least for conducting the industrial case study: \"we receive positive feedback from Baidu\")", "suppl_url": "data, analysis scripts, and data tables\n\nwebsite: https://github.com/Spiridempt/AGA\n\nfigshare: https://figshare.com/s/cf8cc6ba9259c0e0754d.", "approach": "An improved version of the traditianl GA algortihm called \"Accelerated Greedy Additional\"", "metrics": " - APFD\n - Speedup ratio\n - Analysis of Covariance (ANCOVA)", "open_challenges": "Not discussed"}