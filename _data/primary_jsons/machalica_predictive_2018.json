{"type": "primary", "year": "2019", "authors": "Machalica, Mateusz; Samylkin, Alex; Porth, Meredith; Chandra, Satish", "author_keys": ["machalica_mateusz", "samylkin_alex", "porth_meredith", "chandra_satish"], "title": "Predictive Test Selection", "bibtex": "machalica_predictive_2018", "abstract": "Change-based testing is a key component of continuous integration at Facebook. However, a large number of tests coupled with a high rate of changes committed to our monolithic repository make it infeasible to run all potentially-impacted tests on each change. We propose a new predictive test selection strategy which selects a subset of tests to exercise for each change submitted to the continuous integration system. The strategy is learned from a large dataset of historical test outcomes using basic machine learning techniques. Deployed in production, the strategy reduces the total infrastructure cost of testing code changes by a factor of two, while guaranteeing that over 95% of individual test failures and over 99.9% of faulty changes are still reported back to developers. The method we present here also accounts for the non-determinism of test outcomes, also known as test flakiness.", "published_in": "2019 IEEE/ACM 41st International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP)", "publisher": "IEEE", "doi": "10.1109/ICSE-SEIP.2019.00018", "date": "2019-08-19", "tcp": "", "tcs": "X", "tsr": "", "tsa": "", "ind_motivation": "TRUE", "ind_evaluation": "TRUE", "exp_subjects": "Facebook mobile app repository (undisclosed scale) \n\nIndustrial proprietary, supposedly large scale", "prog_language": "Multi-language", "ind_partner": "Facebook (USA)", "ind_author": "TRUE", "prac_feedback": "FALSE", "avai_tool": "FALSE", "put_practice": "TRUE", "suppl_url": "", "approach": "machine learning-based, history-based", "info_approach": "History-based", "alg_approach": "Machine learning-based", "metrics": "Recall, selection rate", "effe_metrics": "Selection/reduction count/percentage, Accuracy/precision/recall", "effi_metrics": "", "other_metrics": "", "open_challenges": "Incorporate more features into the ML model; more sophisticated ML algorithms and models; correlation between tests that are impacted by the same code."}