{"type": "primary", "year": "2019", "authors": "Zhong, Hua; Zhang, Lingming; Khurshid, Sarfraz", "author_keys": ["zhong_hua", "zhang_lingming", "khurshid_sarfraz"], "title": "TestSage: Regression test selection for large-scale Web service testing", "bibtex": "zhong_testsage:_2019", "abstract": "Regression testing is an important but expensive activity in software development. Among various types of tests, web service tests are usually one of the most expensive (due to network communications) but widely adopted types of tests in commercial software development. Regression test selection (RTS) aims to reduce the number of tests which need to be retested by only running tests that are affected by code changes. Although a large number of RTS techniques have been proposed in the past few decades, these techniques have not been adopted on large-scale web service testing. This is because most existing RTS techniques either require direct code dependency between tests and code under test or cannot be applied on large scale systems with enough efficiency. In this paper, we present a novel RTS technique, TestSage, that performs RTS for web service tests on large scale commercial software. With a small overhead, TestSage is able to collect fine grained (function level) dependency between test and service under test that do not directly depend on each other. TestSage has also been successfully applied to large complex systems with over a million functions. We conducted experiments of TestSage on a large scale backend service at Google. Experimental results show that TestSage reduces 34% of testing time when running all AEC (Analysis, Execution and Collection) phases, 50% of testing time while running without collection phase. TestSage has been integrated with internal testing framework at Google and runs day-to-day at the company.", "published_in": "2019 12th IEEE Conference on Software Testing, Validation and Verification (ICST)", "publisher": "IEEE", "doi": "10.1109/ICST.2019.00052", "date": "2019-06-06", "tcp": "", "tcs": "X", "tsr": "", "tsa": "", "ind_motivation": "TRUE", "ind_evaluation": "TRUE", "exp_subjects": "Google Assistant (tens of thousands of tests)\n\nIndustrial proprietary, very large scale", "prog_language": "C, C++", "ind_partner": "Google (USA)", "ind_author": "TRUE", "prac_feedback": "TRUE", "avai_tool": "FALSE", "put_practice": "TRUE", "suppl_url": "", "approach": "Trace-based", "info_approach": "Coverage-based, Trace-based", "alg_approach": "", "metrics": "Selection ratio, testing time reduction", "effe_metrics": "Testing time", "effi_metrics": "Execution time", "other_metrics": "", "open_challenges": "Explore more granularity levels; explore source-test dependency."}