{"type": "secondary", "year": "2016", "authors": "Hao, Dan; Zhang, Lu; Mei, Hong", "author_keys": ["hao_dan", "zhang_lu", "mei_hong"], "title": "Test-case Prioritization: Achievements and Challenges", "bibtex": "hao_test-case_2016", "abstract": "Test-case prioritization, proposed at the end of last century, aims to schedule the execution order of test cases so as to improve test effectiveness. In the past years, test-case prioritization has gained much attention, and has significant achievements in five aspects: prioritization algorithms, coverage criteria, measurement, practical concerns involved, and application scenarios. In this article, we will first review the achievements of test-case prioritization from these five aspects and then give our perspectives on its challenges.", "published_in": "Frontiers of Computer Science", "publisher": "Springer", "doi": "10.1007/s11704-016-6112-3", "date": "2016-06-29", "tcp": "X", "tcs": "", "tsr": "", "tsa": "", "paper_count": "27", "years_covered": "1999-2016", "systematic": "", "approach": "- Greedy strategies: additional coverage per unit, total or additional coverage;\n- Metaheuristic search: hill climbing and genetic algorithms;\n- Machine learning;\n- Integer linear programming.\n\nAlso mentions model-based and fault-based (they do not provide a clear classification actually)", "metrics": "- APFD;\n- APFDc;\n- APXC (structural coverage);\n- APSC (statement coverage);\n- APMC (method coverage);\n- APBC (block coverage);\n- NAPFD.", "conclusions": "- There is a disconnect between the ultimate goal of TCP (fault detection) and intermediate goals (such as code coverage).\n- Most of the literature uses APFD.\n- Obtaining the information needed for a technique to work is an additional cost.\n- Most early work used only Siemens programs, now grep and gzip are also common.\n- Few works evaluate against evolving software. According to [55], changes in source code rarely affect prioritization results, but changes in test cases often do.\n- Techniques are often evaluated against small programs, which do not highlight the benefits of prioritization.", "open_challenges": "- A measurement to address multiple practical constraints is needed;\n- Cost of obtaining required information (i.e. coverage);\n- Evaluations are performed on small programs;\n- Techniques do not consider practical concerns;\n- Consider small test suites with long-running tests."}