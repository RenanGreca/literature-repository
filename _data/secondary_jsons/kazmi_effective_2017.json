{"type": "secondary", "year": "2017", "authors": "Kazmi, Rafaqut; Jawawi, Dayang N. A.; Mohamad, Radziah; Ghani, Imran", "author_keys": ["kazmi_rafaqut", "jawawi_dayang_n_a", "mohamad_radziah", "ghani_imran"], "title": "Effective Regression Test Case Selection: A Systematic Literature Review", "bibtex": "kazmi_effective_2017", "abstract": "Regression test case selection techniques attempt to increase the testing effectiveness based on the measurement capabilities, such as cost, coverage, and fault detection. This systematic literature review presents state-of-the-art research in effective regression test case selection techniques. We examined 47 empirical studies published between 2007 and 2015. The selected studies are categorized according to the selection procedure, empirical study design, and adequacy criteria with respect to their effectiveness measurement capability and methods used to measure the validity of these results. The results showed that mining and learning-based regression test case selection was reported in 39% of the studies, unit level testing was reported in 18% of the studies, and object-oriented environment (Java) was used in 26% of the studies. Structural faults, the most common target, was used in 55% of the studies. Overall, only 39% of the studies conducted followed experimental guidelines and are reproducible. There are 7 different cost measures, 13 different coverage types, and 5 fault-detection metrics reported in these studies. It is also observed that 70% of the studies being analyzed used cost as the effectiveness measure compared to 31% that used fault-detection capability and 16% that used coverage.", "published_in": "Computing Surveys", "publisher": "ACM", "doi": "10.1145/3057269", "date": "2017-05-27", "tcp": "", "tcs": "X", "tsr": "", "tsa": "", "paper_count": "47", "years_covered": "2007-2015", "systematic": "X", "approach": "- Mining and learning;\n- Model-based;\n- Slicing;\n- Control flow graph;\n- Oracle-based;\n- Firewall.", "metrics": "- Measuring cost (i.e. compilation time);\n- Test suite size;\n- Testing time;\n- Defect discovery time;\n- Bounded execution time;\n- Cost of each test case;\n- Selection time.", "conclusions": "- Ideas of test case classification and safe regression testing.\n- New trends (CI, cloud, etc) pose different challenges to RT.\n- Mining and learning is popular, but have several drawbacks.\n- Coverage, cost or fault detection not sufficient alone.\n- Consider coverage granularity.\n- Focus should be on fault detection, not code coverage.\n- Evaluations should be performed with artifact repositories or open-source software.\n- Focus on measurable aspects of RT.\n- Need of more statistical methods.\n- Mutation score might replace coverage adequacy.", "open_challenges": "- Consider trade-offs between current techniques and mining/learning ones.\n- Design a general-purpose evaluation technique for RTS.\n- Empirical study design guidelines are not mature;\n- Investigate multi-criteria cases with statistical methods;\n- Determine relationship between cost, coverage and fault-detection abilities."}