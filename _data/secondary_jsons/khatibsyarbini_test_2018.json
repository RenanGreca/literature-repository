{"year": "2018", "authors": "Khatibsyarbini, Muhammad; Isa, Mohd Adham; Jawawi, Dayang N. A.; Tumeng, Rooster", "title": "Test case prioritization approaches in regression testing: A systematic literature review", "bibtex": "khatibsyarbini_test_2018", "abstract": "Context\nSoftware quality can be assured by going through software testing process. However, software testing phase is an expensive process as it consumes a longer time. By scheduling test cases execution order through a prioritization approach, software testing efficiency can be improved especially during regression testing.\n\nObjective\nIt is a notable step to be taken in constructing important software testing environment so that a system's commercial value can increase. The main idea of this review is to examine and classify the current test case prioritization approaches based on the articulated research questions.\n\nMethod\nSet of search keywords with appropriate repositories were utilized to extract most important studies that fulfill all the criteria defined and classified under journal, conference paper, symposiums and workshops categories. 69 primary studies were nominated from the review strategy.\n\nResults\nThere were 40 journal articles, 21 conference papers, three workshop articles, and five symposium articles collected from the primary studies. As for the result, it can be said that TCP approaches are still broadly open for improvements. Each approach in TCP has specified potential values, advantages, and limitation. Additionally, we found that variations in the starting point of TCP process among the approaches provide a different timeline and benefit to project manager to choose which approaches suite with the project schedule and available resources.\n\nConclusion\nTest case prioritization has already been considerably discussed in the software testing domain. However, it is commonly learned that there are quite a number of existing prioritization techniques that can still be improved especially in data used and execution process for each approach.\n", "published_in": "Information and Software Technology", "publisher": "Elsevier", "doi": "10.1016/j.infsof.2017.08.014", "date": "2017-09-01", "tcp": "X", "tcs": "", "tsr": "", "tsa": "", "paper_count": "80", "years_covered": "1999-2016", "systematic": "X", "approach": "Authors grouped the TCP approaches into seven main dimensions:\n-Coverage-based\n-Requirement-based\n-Risk-based\n-Search-based\n-Fault-based\n-History-based\n-Others-based (e.g., cost-aware, bayesian-network, topic model, multi-criteria, workflow)\n\nA description of each approach is provided in Table 10. Advantages and limitations are discussed in Table A4.", "metrics": " - APFD 51%\n - Coverage Effectiveness (CE) 10%\n - APFDc 9%\n - Time execution 7%\n - Others (Mostly variations of APFD) 23%", "conclusions": " - TCP approaches are still broadly open for improvements\n\n - Each TCP approach has specific advantages and limitations\n\n - Authors found that variations in the starting point of TCP process provide a different timeline and benefit; project managers should choose which approaches to use based on the project schedule and available resources.\n\n - Search-based TCP is the most used method among the surveyed studies, followed by coverage-based TCP\n\n - Implementation of artificial intelligence element has been a trend among researchers", "open_challenges": "-The data or information classification in TCP (requirement, system models, and source code) needs to be investigated further\n\n-The specific time frame for the execution process of TCP needs to be detailed out.\n\n-Early prioritization in the early stage of a system development life cycle needs to be further investigated\n\n-Human involvement in decision-making and estimation (human error), \n\n-How does TCP support fault localization compared to TCS?"}