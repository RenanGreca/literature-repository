{"year": "2018", "authors": "Mukherjee, Rajendrani; Patnaik, K. Sridhar", "title": "A survey on different approaches for software test case prioritization", "bibtex": "mukherjee_survey_2018", "abstract": "Testing is the process of evaluating a system by manual or automated means. While Regression Test Selection (RTS) discards test cases and Test Suite Minimization (TSM) shows diminution in fault detection rate, Test Case Prioritization (TCP) does not discard test cases. Test Case Prioritization techniques can be coverage or historical information based or model based. It can also be cost-time aware or requirement-risk aware. GUI/Web applications need special prioritization mechanism. In this paper, 90 scholarly articles ranging from 2001 to 2018 have been reviewed. We have explored IEEE, Wiley, ACM Library, Springer, Taylor & Francis and Elsevier database. We have also described each prioritization method with their findings and subject programs. This paper includes a chronological catalogue listing of the reviewed papers. We have framed three research questions which sum up the frequently used prioritization metrics, regularly used subject programs and the distribution of different prioritization techniques. To the best of our knowledge, this is the first review with a detail report of the last 18\u202fyears of TCP techniques. We hope this article will be beneficial for both beginners and seasoned professionals.", "published_in": "Journal of King Saud University - Computer and Information Sciences", "publisher": "Elsevier", "doi": "10.1016/j.jksuci.2018.09.005", "date": "2018-10-03", "tcp": "X", "tcs": "", "tsr": "", "tsa": "", "paper_count": "90", "years_covered": "2001-2018", "systematic": "X", "approach": "- Coverage-aware;\n- Historical;\n- Cost cognizant;\n- Time-aware;\n- Requirement and risk-oriented;\n- Model-based.\n\nalso \n-GUI/web application focused\n- other", "metrics": "- APFD;\n- APFDc;\n- NAPFD;\n- Savings factor (SF);\n- Coverage effectiveness (CE);\n- Convergence index (CI);\n- Average severity of faults detected (ASFD);\n- Most likely relative position (RP);\n- Average percentage of damage prevented (APDP).", "conclusions": "- APFD most used; APFDc, NAPFD etc. also valuable.\n- SIR is valuable for evaluation subjects.\n- Coverage-aware is predominant, followed by requirement-based methods; model-based is increasing.", "open_challenges": "- Few techinques evaluated on real-world software systems;\n- Effect of alteration of test suite on TCP efficacy;\n- Coverage-less techniques should be explored;\n- Static-dynamic combined techniques;\n- TCP based on program changes;\n- Software product line related TCP."}