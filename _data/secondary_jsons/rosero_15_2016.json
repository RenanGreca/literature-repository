{"type": "secondary", "year": "2016", "authors": "Rosero, Ra\u00fal H.; G\u00f3mez, Oomar S.; Rodr\u00edguez, Glen", "author_keys": ["rosero_raul_h", "gomez_oomar_s", "rodriguez_glen"], "title": "15 Years of Software Regression Testing Techniques - A Survey", "bibtex": "rosero_15_2016", "abstract": "Software regression testing techniques verify previous functionalities each time software modifications occur or new characteristics are added. With the aim of gaining a better understanding of this subject, in this work we present a survey of software regression testing techniques applied in the last 15 years; taking into account its application domain, kind of metrics they use, its application strategies and the phase of the software development process where they are applied. From an outcome of 460 papers, a set of 25 papers describing the use of 31 software testing regression techniques were identified. Results of this survey suggest that at the time of applying a regression testing techniques, metrics like cost and fault detection efficiency are the most relevant. Most of the techniques were assessed with instrumented programs (experimental cases) under academic settings. Conversely, we observe a minimum set of software regression techniques applied in industrial settings, mainly, under corrective and maintenance approaches. Finally, we observe a trend using some regression techniques under agile approaches. \u00a9 2016 World Scientific Publishing Company.", "published_in": "International Journal of Software Engineering and Knowledge Engineering", "publisher": "World Scientific", "doi": "10.1142/S0218194016300013", "date": "2015-06-25", "tcp": "X", "tcs": "X", "tsr": "X", "tsa": "", "paper_count": "25", "years_covered": "2000-2014", "systematic": "", "approach": "For TSM:\n- Heuristics-based.\n\nFor RTS:\n- Graph-, dependency- or UML-based;\n- Model-based;\n- Heuristics-based;\n- Based on historical data;\n- Based on fault detection;\n- Modifications-based.\n\nFor TCP:\n- Based on fault detection;\n- Historical and probabilistic;\n- Model-based\n- Dynamic analysis and natural language;\n- Graphs-, dependency- or UML-based;\n- Heuristics-based.\n\nAlso include RTO=Rgre Test Optimization (? to do what?):\n- based on fuzzy logic\n- based on heuristic", "metrics": "- Fault detection ability;\n- Accuracy;\n- Selection time;\n- Implementation time.\n--> see also summary in notes (column H)", "conclusions": "- Selection is predominant;\n- AI-based techniques are becoming more popular;\n- Techniques are usually based on source code, historical test data, test cases, heuristics, or AI approaches;\n- Only 16% of papers experimented in industrial context;\n- Results are not always reliable.", "open_challenges": "- Small number in agile context;\n- Only controlled academic experiments;\n- Lack of RT techniques applied in industry;\n- Industry might be reluctant to invest in RT."}