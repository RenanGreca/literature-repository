Core metadata,,,Additional metadata,,,,,,Additional data,,,,,,,
Year,Authors,Title,Abstract,Published in,Publisher,bibtex,doi,date,TCP,TCS,TSR,TSA,Paper count,Years covered,Systematic,Context
2016,"Do, Hyunsook",Recent advances in regression testing techniques,"Software systems and their environment change are continuous. They are enhanced, corrected, and ported to new platforms. These changes can affect a system adversely, thus software engineers perform regression testing to ensure the quality of the modified systems. Regression testing is an integral part of most major software projects, but as projects grow larger and the number of tests increases, performing regression testing becomes more costly. To address this problem, many researchers and practitioners have proposed and empirically evaluated various regression testing techniques, such as regression test selection, test case prioritization, and test suite minimization. Recent surveys on these techniques indicate that this research area continues to grow, heuristics and the types of data utilized become diverse, and wider application domains have been considered. This chapter presents the current status and the trends of three regression testing techniques and discusses recent advances of each technique.",Advances in Computers,Elsevier,do_recent_2016,10.1016/bs.adcom.2016.04.004,2016-05-10,X,X,X,,12,2010-2016,,
2016,"Hao, Dan; Zhang, Lu; Mei, Hong",Test-case Prioritization: Achievements and Challenges,"Test-case prioritization, proposed at the end of last century, aims to schedule the execution order of test cases so as to improve test effectiveness. In the past years, test-case prioritization has gained much attention, and has significant achievements in five aspects: prioritization algorithms, coverage criteria, measurement, practical concerns involved, and application scenarios. In this article, we will first review the achievements of test-case prioritization from these five aspects and then give our perspectives on its challenges.",Frontiers of Computer Science,Springer,hao_test-case_2016,10.1007/s11704-016-6112-3,2016-06-29,X,,,,27,1999-2016,,
2016,"Rosero, Raúl H.; Gómez, Oomar S.; Rodríguez, Glen",15 Years of Software Regression Testing Techniques - A Survey,"Software regression testing techniques verify previous functionalities each time software modifications occur or new characteristics are added. With the aim of gaining a better understanding of this subject, in this work we present a survey of software regression testing techniques applied in the last 15 years; taking into account its application domain, kind of metrics they use, its application strategies and the phase of the software development process where they are applied. From an outcome of 460 papers, a set of 25 papers describing the use of 31 software testing regression techniques were identified. Results of this survey suggest that at the time of applying a regression testing techniques, metrics like cost and fault detection efficiency are the most relevant. Most of the techniques were assessed with instrumented programs (experimental cases) under academic settings. Conversely, we observe a minimum set of software regression techniques applied in industrial settings, mainly, under corrective and maintenance approaches. Finally, we observe a trend using some regression techniques under agile approaches. © 2016 World Scientific Publishing Company.",International Journal of Software Engineering and Knowledge Engineering,World Scientific,rosero_15_2016,10.1142/S0218194016300013,2015-06-25,X,X,X,,25,2000-2014,,
2017,"Kazmi, Rafaqut; Jawawi, Dayang N. A.; Mohamad, Radziah; Ghani, Imran",Effective Regression Test Case Selection: A Systematic Literature Review,"Regression test case selection techniques attempt to increase the testing effectiveness based on the measurement capabilities, such as cost, coverage, and fault detection. This systematic literature review presents state-of-the-art research in effective regression test case selection techniques. We examined 47 empirical studies published between 2007 and 2015. The selected studies are categorized according to the selection procedure, empirical study design, and adequacy criteria with respect to their effectiveness measurement capability and methods used to measure the validity of these results. The results showed that mining and learning-based regression test case selection was reported in 39% of the studies, unit level testing was reported in 18% of the studies, and object-oriented environment (Java) was used in 26% of the studies. Structural faults, the most common target, was used in 55% of the studies. Overall, only 39% of the studies conducted followed experimental guidelines and are reproducible. There are 7 different cost measures, 13 different coverage types, and 5 fault-detection metrics reported in these studies. It is also observed that 70% of the studies being analyzed used cost as the effectiveness measure compared to 31% that used fault-detection capability and 16% that used coverage.",Computing Surveys,ACM,kazmi_effective_2017,10.1145/3057269,2017-05-27,,X,,,47,2007-2015,X,
2018,"Bajaj, Anu; Sangwan, Om Prakash",A survey on regression testing using nature-inspired approaches,"Efficient regression testing plays an important role for organizations that have large investment in active, ever-changing software development. Efficiency can be obtained by optimizing the test cases as it provides a balance between the safety and precision. Many optimization techniques from various domains have been applied in regression testing for optimizing the search and the solutions. But nature-inspired algorithms are gaining more popularity now a days as the algorithms are more efficient for complex problems. In this paper, we have explored the research work done by various researchers on regression testing using nature-inspired approaches. It is found that biology inspired computation e.g. genetic algorithm have been widely used in regression testing optimization with the intent of maximizing fault or code coverage in minimum time. It is also concluded that nature-inspired approaches have great potential to optimize regression testing problems.",4th International Conference on Computing Communication and Automation (ICCCA),IEEE,bajaj_survey_2018,10.1109/CCAA.2018.8777692,2019-07-29,X,X,X,,15,1999-2016,,Nature-inspired
2018,"Khatibsyarbini, Muhammad; Isa, Mohd Adham; Jawawi, Dayang N. A.; Tumeng, Rooster",Test case prioritization approaches in regression testing: A systematic literature review,"Context
Software quality can be assured by going through software testing process. However, software testing phase is an expensive process as it consumes a longer time. By scheduling test cases execution order through a prioritization approach, software testing efficiency can be improved especially during regression testing.

Objective
It is a notable step to be taken in constructing important software testing environment so that a system's commercial value can increase. The main idea of this review is to examine and classify the current test case prioritization approaches based on the articulated research questions.

Method
Set of search keywords with appropriate repositories were utilized to extract most important studies that fulfill all the criteria defined and classified under journal, conference paper, symposiums and workshops categories. 69 primary studies were nominated from the review strategy.

Results
There were 40 journal articles, 21 conference papers, three workshop articles, and five symposium articles collected from the primary studies. As for the result, it can be said that TCP approaches are still broadly open for improvements. Each approach in TCP has specified potential values, advantages, and limitation. Additionally, we found that variations in the starting point of TCP process among the approaches provide a different timeline and benefit to project manager to choose which approaches suite with the project schedule and available resources.

Conclusion
Test case prioritization has already been considerably discussed in the software testing domain. However, it is commonly learned that there are quite a number of existing prioritization techniques that can still be improved especially in data used and execution process for each approach.
",Information and Software Technology,Elsevier,khatibsyarbini_test_2018,10.1016/j.infsof.2017.08.014,2017-09-01,X,,,,80,1999-2016,X,
2018,"Mukherjee, Rajendrani; Patnaik, K. Sridhar",A survey on different approaches for software test case prioritization,"Testing is the process of evaluating a system by manual or automated means. While Regression Test Selection (RTS) discards test cases and Test Suite Minimization (TSM) shows diminution in fault detection rate, Test Case Prioritization (TCP) does not discard test cases. Test Case Prioritization techniques can be coverage or historical information based or model based. It can also be cost-time aware or requirement-risk aware. GUI/Web applications need special prioritization mechanism. In this paper, 90 scholarly articles ranging from 2001 to 2018 have been reviewed. We have explored IEEE, Wiley, ACM Library, Springer, Taylor & Francis and Elsevier database. We have also described each prioritization method with their findings and subject programs. This paper includes a chronological catalogue listing of the reviewed papers. We have framed three research questions which sum up the frequently used prioritization metrics, regularly used subject programs and the distribution of different prioritization techniques. To the best of our knowledge, this is the first review with a detail report of the last 18 years of TCP techniques. We hope this article will be beneficial for both beginners and seasoned professionals.",Journal of King Saud University - Computer and Information Sciences,Elsevier,mukherjee_survey_2018,10.1016/j.jksuci.2018.09.005,2018-10-03,X,,,,90,2001-2018,X,
2018,"Rehman Khan, Saif Ur; Lee,  Sai Peck; Javaid, Nadeem; Abdul, Wadood","A systematic review on test suite reduction: Approaches, experiment’s quality evaluation, and guidelines","Regression testing aims at testing a system under test (SUT) in the presence of changes. As a SUT changes, the number of test cases increases to handle the modifications, and ultimately, it becomes practically impossible to execute all of them within limited testing budget. Test suite reduction (TSR) approaches are widely used to improve the regression testing costs by selecting representative test suite without compromising effectiveness, such as fault-detection capability, within allowed time budget. The aim of this systematic review is to identify state-of-the-art TSR approaches categories, assess the quality of experiments reported on this subject, and provide a set of guidelines for conducting future experiments in this area of research. After applying a two-facet study selection procedure, we finalized 113 most relevant studies from an initial pool of 4230 papers published in the field of TSR between 1993 and 2016. The TSR approaches are broadly classified into four main categories based on the literature including greedy, clustering, search, and hybrid approaches. It is noted that majority of the experiments in TSR do not follow any specific guidelines for planning, conducting, and reporting the experiments, which may pose validity threats related to their results. Thus, we recommend conducting experiments that are better designed for the future. In this direction, an initial set of recommendations is provided that are useful for performing well-designed experiments in the field of TSR. Furthermore, we provide a number of future research directions based on current trends in this field of research.",IEEE Access,IEEE,rehman_khan_systematic_2018,10.1109/ACCESS.2018.2809600,2018-02-27,,,X,,113,1993-2016,X,
2019,"Bajaj, Anu; Sangwan, Om Prakash",A systematic literature review of test case prioritization using genetic algorithms,"Regression testing is the essential process of software maintenance and evolution phase of the software development life cycle for assuring the quality and reliability of updated software. Test case prioritization is the technique of regression testing to reduce the time and effort required for regression testing. Search-based algorithms are used to enhance the efficiency and effectiveness of the method. Among these search-based optimization algorithms, genetic algorithms are becoming more popular among researchers since the last decade. In this paper, we are doing a systematic literature review, i.e., a secondary study of test case prioritization using genetic algorithms. The objective of this review is to examine and classify the current state of use of the genetic algorithm in test case prioritization. In other words, to give a base for the advancement of test case prioritization research using genetic algorithms. With the use of the systematic literature review protocol, we selected the most relevant studies (20 out of 384) from the appropriate repositories by using a set of search keywords, inclusion/exclusion criteria and the quality assessment of studies. The data extraction and synthesis process and the taxonomic classification are used to answer the research questions. We also performed a rigorous analysis of the techniques by comparing them on research methodology, the prioritization method, dataset specification, test suite size, types of genetic algorithms used, performance metrics, and the validation criteria. The whole process took four months for comprehensive analysis and classification of primary studies. We observed that the parameter settings, the type of operators, the probabilistic rate of operators, and fitness function design have a significant impact on the quality of the solutions obtained. This systematic literature review yields that genetic algorithms have great potential in solving test case prioritization problems, and the area is open ...",IEEE Access,IEEE,bajaj_systematic_2019,10.1109/ACCESS.2019.2938260,2019-08-29,X,,,,20,2006-2018,X,Genetic
2019,"bin Ali, Nauman; Engström, Emelie; Taromirad, Masoumeh; Mousavi, Mohammad Reza; Minhas, Nasir Mehmood; Helgesson, Daniel; Kunze, Sebastian; Varshosaz, Mahsa",On the search for industry-relevant regression testing research,"Regression testing is a means to assure that a change in the software, or its execution environment, does not introduce new defects. It involves the expensive undertaking of rerunning test cases. Several techniques have been proposed to reduce the number of test cases to execute in regression testing, however, there is no research on how to assess industrial relevance and applicability of such techniques. We conducted a systematic literature review with the following two goals: firstly, to enable researchers to design and present regression testing research with a focus on industrial relevance and applicability and secondly, to facilitate the industrial adoption of such research by addressing the attributes of concern from the practitioners' perspective. Using a reference-based search approach, we identified 1068 papers on regression testing. We then reduced the scope to only include papers with explicit discussions about relevance and applicability (i.e. mainly studies involving industrial stakeholders). Uniquely in this literature review, practitioners were consulted at several steps to increase the likelihood of achieving our aim of identifying factors important for relevance and applicability. We have summarised the results of these consultations and an analysis of the literature in three taxonomies, which capture aspects of industrial-relevance regarding the regression testing techniques. Based on these taxonomies, we mapped 38 papers reporting the evaluation of 26 regression testing techniques in industrial settings. © 2019, The Author(s).",Empirical Software Engineering,Springer,bin_ali_search_2019,10.1007/s10664-018-9670-1,2019-02-12,X,X,X,,38,2002-2017,Mix,
2019,"Danglot, Benjamin; Vera-Perez, Oscar; Yu, Zhongxing; Zaidman, Andy; Monperrus, Martin; Baudry, Benoit",A snowballing literature study on test amplification,"The adoption of agile approaches has put an increased emphasis on testing, resulting in extensive test suites. These suites include a large number of tests, in which developers embed knowledge about meaningful input data and expected properties as oracles. This article surveys works that exploit this knowledge to enhance manually written tests with respect to an engineering goal (e.g., improve coverage or refine fault localization). While these works rely on various techniques and address various goals, we believe they form an emerging and coherent field of research, which we coin “test amplification”. We devised a first set of papers from DBLP, searching for all papers containing “test” and “amplification” in their title. We reviewed the 70 papers in this set and selected the 4 papers that fit the definition of test amplification. We use them as the seeds for our snowballing study, and systematically followed the citation graph. This study is the first that draws a comprehensive picture of the different engineering goals proposed in the literature for test amplification. We believe that this survey will help researchers and practitioners entering this new field to understand more quickly and more deeply the intuitions, concepts and techniques used for test amplification.",Journal of Systems and Software,Elsevier,danglot2019snowballing,10.1016/j.jss.2019.110398,2019-08-19,,,,X,49,1993-2017,X,
2019,"Lou, Yiling; Chen, Junjie; Zhang, Lingming; Hao, Dan",A Survey on Regression Test-Case Prioritization,"Regression testing is crucial for ensuring the quality of modern software systems, but can be extremely costly in practice. Test-case prioritization has been proposed to improve the effectiveness of regression testing by scheduling the execution order of test cases to detect regression bugs faster. Since its first proposal, test-case prioritization has been intensively studied in the literature. In this chapter, we perform an extensive survey and analysis on existing test-case prioritization techniques, as well as pointing out future directions for test-case prioritization. More specifically, we collect 191 papers on test-case prioritization from 1997 to 2016 and conduct a detailed survey to systematically investigate these work from six aspects, i.e., algorithms, criteria, measurements, constraints, empirical studies, and scenarios. For each of the six aspects, we discuss the existing work and the trend during the evolution of test-case prioritization. Furthermore, we discuss the current limitations/issues in test-case prioritization research, as well as potential future directions on test-case prioritization. Our analyses provide the evidence that test-case prioritization topic is attracting increasing interests, while the need for practical test-case prioritization tools remains.",Advances in Computers,Elsevier,lou_survey_2018,10.1016/bs.adcom.2018.10.001,2018-12-14,X,,,,191,1997-2016,X,
2020,"Hasnain, Muhammad; Ghani, Imran; Pasha, Muhammad Fermi; Lim, Chern Hong; Jeong, Seung Ryul",A Comprehensive Review on Regression Test Case Prioritization Techniques for Web Services,"Test Case Prioritization (TCP) involves the rearrangement of test cases on a prioritized basis for various services. This research work focuses on TCP in web services, as it has been a growing challenge for researchers. Web services continuously evolve and hence require reforming and re-execution of test cases to ensure the accurate working of web services. This study aims to investigate gaps, issues, and existing solutions related to test case prioritization. This study examines research publications within popular selected databases. We perform a meticulous screening of research publications and selected 65 papers through which to answer the proposed research questions. The results show that criteria-based test case prioritization techniques are reported mainly in 41 primary studies. Test case prioritization models, frameworks, and related algorithms are also reported in primary studies. In addition, there are eight issues related to TCP techniques. Among these eight issues, optimization and high effectiveness are most discussed within primary studies. This systematic review has identified that a significant proportion of primary studies are not involved in the use of statistical methods in measuring or comparing the effectiveness of TCP techniques. However, a large number of primary studies use 'Average Percentage of Faults Detected' (APFD) or extended APFD metrics to compute the performance of techniques for web services.
",KSII Transactions on Internet and Information Systems (TIIS),Korean Society for Internet Information,hasnain_comprehensive_2020,10.3837/tiis.2020.05.001,2020-05-31,X,,,,65,2001-2017,X,Web services
2020,"Prado Lima, Jackson A.; Vergilio, Silvia R.",Test Case Prioritization in Continuous Integration environments: A systematic mapping study,"Context: Continuous Integration (CI) environments allow frequent integration of software changes, making software evolution more rapid and cost-effective. In such environments, the regression test plays an important role, as well as the use of Test Case Prioritization (TCP) techniques. Such techniques attempt to identify the test case order that maximizes certain goals, such as early fault detection. This research subject has been raising interest because some new challenges are faced in the CI context, as TCP techniques need to consider time constraints of the CI environments. Objective: This work presents the results of a systematic mapping study on Test Case Prioritization in Continuous Integration environments (TCPCI) that reports the main characteristics of TCPCI approaches and their evaluation aspects. Method: The mapping was conducted following a plan that includes the definition of research questions, selection criteria and search string, and the selection of search engines. The search returned 35 primary studies classified based on the goal and kind of used TCP technique, addressed CI particularities and testing problems, and adopted evaluation measures. Results: The results show a growing interest in this research subject. Most studies have been published in the last four years. 80% of the approaches are history-based, that is, are based on the failure and test execution history. The great majority of studies report evaluation results by comparing prioritization techniques. The preferred measures are Time and number/percentage of Faults Detected. Few studies address CI testing problems and characteristics, such as parallel execution and test case volatility. Conclusions: We observed a growing number of studies in the field. Future work should explore other information sources such as models and requirements, as well as CI particularities and testing problems, such as test case volatility, time constraint, and flaky tests, to solve existing challenges and offer cost-effective approaches to the software industry. © 2020 Elsevier B.V.",Information and Software Technology,Elsevier,prado_lima_test_2020,10.1016/j.infsof.2020.106268,2020-01-25,X,,,,35,2009-2019,X,Continuous integration
2021,"Abdul Manan, Muhammad Syafiq; Abang Jawawi, Dayang Norhayati; Ahmad, Johanna",A Systematic Literature Review on Test Case Prioritization in Combinatorial Testing,"In recent years, regression testing is widely used and performed in industries during the maintenance phase of software system development. The increases of software regression test cases resulted in a higher complexity of the software system, due to the rapid change in the software development. Thus, many researchers had proposed the test cases prioritisation technique to overcome the raised issues. However, most of the applications needed the combinatorial testing due to the enormous size of the software inputs. The problem arises when the small t-way values were selected in combinatorial testing, which resulted in the ineffectiveness of the fault detection ability. This work presents the results of a systematic literature review on the test case prioritisation and combinatorial testing that report the main approach, problems, and evaluation metric that were being used from existing studies. This paper aims to identify the aspects of the test case prioritisation and combinatorial testing that have been studied before, provide a basis for the improvement, and evaluate the current trends of this research area. Apart from the recent works that were published in the last ten years, 20 papers were selected for further study in the systematic literature review. The results show that this area of study is open for improvement especially to efficiently generate the test cases, which minimise the number of test cases generated, and effectively prioritise the test cases that increase the fault detection ability in software testing. However, the use of both techniques still needs more enhancements for the existing proposed approach that could result in the increasing of the fault detection ability.","ICACS '21: 2021 The 5th International Conference on Algorithms, Computing and Systems",ACM,abdul2021systematic,10.1145/3490700.3490710,2022-01-05,X,,,,20,2011-2020,X,Combinatorial
2021,"Hasnain, Muhammad; Ghani, Imran; Pasha, Muhammad Fermi; Jeong, Seung-Ryul",Ontology-Based Regression Testing: A Systematic Literature Review,"Web systems evolve by adding new functionalities or modifying them to meet users’ requirements. Web systems require retesting to ensure that existing functionalities are according to users’ expectations. Retesting a web system is challenging due to high cost and time consumption. Existing ‘systematic literature review’ (SLR) studies do not comprehensively present the ontology-based regression testing approaches. Therefore, this study focuses on ontology-based regression testing approaches because ontologies have been a growing research solution in regression testing. Following this, a systematic search of studies was performed using the “Preferred Reporting Items for Systematic Reviews and Meta-Analyses” (PRISMA) guidelines. A total of 24 peer-reviewed studies covering ontologies (semantic and inference rules) and regression testing, published between 2007 and 2019, were selected. The results showed that mainly ontology-based regression testing approaches were published in 2011–2012 and 2019 because ontology got momentum in research in other fields of study during these years. Furthermore, seven challenges to ontology-driven regression testing approaches are reported in the selected studies. Cost and validation are the main challenges examined in the research studies. The scalability of regression testing approaches has been identified as a common problem for ontology-based and other benchmark regression testing approaches. This SLR presents that the safety of critical systems is a possible future research direction to prevent human life risks.",Applied Sciences,MDPI,hasnain2021ontology,10.3390/app11209709,2021-10-18,X,,,,24,2007-2019,X,Ontology-based
2021,"Mohd-Shafie, Muhammad Luqman; Kadir, Wan Mohd Nasir Wan; Lichter, Horst; Khatibsyarbini, Muhammad; Isa, Mohd Adham",Model-based test case generation and prioritization: a systematic literature review,"Model-based test case generation (MB-TCG) and prioritization (MB-TCP) utilize models that represent the system under test (SUT) for test generation and prioritization in software testing. They are based on model-based testing (MBT), a technique that facilitates automation in testing. Automated testing is indispensable for testing complex and industrial-size systems because of its advantages over manual testing. In recent years, MB-TCG and MB-TCP publications have shown an encouraging growth. However, the empirical studies done to validate these approaches must not be taken lightly because they reflect the results' validity and whether these approaches are generalizable to the industrial context. This systematic review aims at identifying and reviewing the state-of-the-art for MB-TCG, MB-TCP, and the approaches that combined MB-TCG and MB-TCP. The needs for this review were used to design the research questions. Keywords extracted from the research questions were utilized to search for studies in the literature that will answer the research questions. Prospective studies also underwent a quality assessment to ensure that only studies with sufficient quality were selected. All the research data of this review are also available in a public repository for full transparency. 122 primary studies were finalized and selected. There were 100, 15, and seven studies proposed for MB-TCG, MB-TCP, and MB-TCG and MB-TCP combination approaches, respectively. One of the main findings is that the most common limitations in the existing approaches are the dependency on specifications, the need for manual interventions, and the scalability issue.",Software and Systems Modeling,Springer,mohd2021model,10.1007/s10270-021-00924-8,2021-09-07,X,,,,22,2005-2018,X,Model-based
2021,"Rosero, Raúl H; Gómez, Omar S.; Villa, Eduardo R.; Aguilar, Raúl A.; Pardo, César J.",Software Regression Testing in Industrial Settings: Preliminary Findings from a Literature Review,"In the professional field of software development, unit tests are often used as a verification mechanism of the code produced. With the design and execution of test cases, it is possible to verify new or modified code, as well as to verify existing versions of it. In order to prevent new defects from spreading over existing versions of the code, it is necessary to strategically re-run different test cases. This activity is known as software regression testing and can constitute a high percentage of the total cost of the verification process. Researchers continuously are dealing with making software regression testing efficient. In order to shed light on the application of software regression testing in industry, this paper presents a literature review on different aspects of regression testing applied in industrial settings. As a result, 40 primary studies that report the use of regression testing in the industry were identified. We observe that the main regression testing technique used is the selection of test cases followed by the prioritization of them. The use of combinations of metrics based on coverage, requirements, risk, defects, cost-efficiency searches is also observed.",The International Conference on Advances in Emerging Trends and Technologies,Springer,rosero2021software,10.1007/978-3-030-96147-3_18,2022-02-10,X,X,X,,40,2002-2020,X,
2021,"Samad, Ali; Mahdin, Hairulnizam; Kazmi, Rafaqut; Ibrahim, Rosziati",Regression Test Case Prioritization: A Systematic Literature Review,"Abstract: The techniques associated with the Test Case Prioritization (TCP) are used to reduce the cost of regression testing to achieve the objectives that the modifications in the target code would not impact the functionality of updated software. The effectiveness of the TCP is measured based on the cost, the code coverage, and fault detection ability. The regression testing techniques proposed so far are focusing on one or two effectiveness parameters. In this paper, we presented a state-of-art review of the approaches used in regression testing in detail. The second objective is to combine these effective adequacy measures into a single or multi-objective TCP task. This systematic literature review is conducted to identify the state-of-the-art research in regression TCP from 2007 to 2020. The research identifies fifty-two (52) relevant studies that were focusing on these three selection parameters to justify their findings. The results reveal that there were six families of regression TCP in which meta-heuristic regression TCP were reported in 38% and generic regression TCP techniques in 31%. The parameters used as prioritization criteria were cost, code coverage, and fault detection ability. The code coverage is reported by 38%, cost in 17%, and cost and code coverage in 31%. There were three sources for datasets were identified named Software artefact Infrastructure Repository (SIR), Apache Software Foundation, and Git Hub. The measurement and metrics used to validate the effectiveness are inclusiveness, precision, recall, and retest-all.",International Journal of Advanced Computer Science and Applications,SAI,samad2021regression,10.14569/IJACSA.2021.0120282 ,2021,X,,,,52,2007-2019,X,
2022,"Ahmed, Farrukh Shahzad; Majeed, Awais; Khan, Tamim Ahmed; Bhatti, Shahid Nazir",Value-based cost-cognizant test case prioritization for regression testing,"Software Test Case Prioritization (TCP) is an effective approach for regression testing to tackle time and budget constraints. The major benefit of TCP is to save time through the prioritization of important test cases first. Existing TCP techniques can be categorized as value-neutral and value-based approaches. In a value-based fashion, the cost of test cases and severity of faults are considered whereas, in a value-neutral fashion these are not considered. The value-neutral fashion is dominant over value-based fashion, and it assumes that all test cases have equal cost and all software faults have equal severity. But this assumption rarely holds in practice. Therefore, value-neutral TCP techniques are prone to produce unsatisfactory results. To overcome this research gap, a paradigm shift is required from value-neutral to value-based TCP techniques. Currently, very limited work is done in a value-based fashion and to the best of the authors’ knowledge, no comprehensive review of value-based cost-cognizant TCP techniques is available in the literature. To address this problem, a systematic literature review (SLR) of value-based cost-cognizant TCP techniques is presented in this paper. The core objective of this study is to combine the overall knowledge related to value-based cost-cognizant TCP techniques and to highlight some open research problems of this domain. Initially, 165 papers were reviewed from the prominent research repositories. Among these 165 papers, 21 papers were selected by using defined inclusion/exclusion criteria and quality assessment procedures. The established questions are answered through a thorough analysis of the selected papers by comparing their research contributions in terms of the algorithm used, the performance evaluation metric, and the results validation method used. Total 12 papers used an algorithm for their technique but 9 papers didn’t use any algorithm. Particle Swarm Optimization (PSO) Algorithm is dominantly used. For results validation, 4 methods are used including, Empirical study, Experiment, Case study, and Industrial case study. The experiment method is dominantly used. Total 6 performance evaluation metrics are used and the APFDc metric is dominantly used. This SLR yields that value-orientation and cost cognition are vital in the TCP process to achieve its intended goals and there is great research potential in this research domain.",Plos one,Plos,ahmed_value_2022,10.1371/journal.pone.0264972,2022-05-17,X,,,,21,2001-2019,X,Value-based
2022,"Pan, Rongqi; Bagherzadeh, Mojtaba; Ghaleb, Taher A.; Briand, Lionel",Test case selection and prioritization using machine learning: a systematic literature review,"Regression testing is an essential activity to assure that software code changes do not adversely affect existing functionalities. With the wide adoption of Continuous Integration (CI) in software projects, which increases the frequency of running software builds, running all tests can be time-consuming and resource-intensive. To alleviate that problem, Test case Selection and Prioritization (TSP) techniques have been proposed to improve regression testing by selecting and prioritizing test cases in order to provide early feedback to developers. In recent years, researchers have relied on Machine Learning (ML) techniques to achieve effective TSP (ML-based TSP). Such techniques help combine information about test cases, from partial and imperfect sources, into accurate prediction models. This work conducts a systematic literature review focused on ML-based TSP techniques, aiming to perform an in-depth analysis of the state of the art, thus gaining insights regarding future avenues of research. To that end, we analyze 29 primary studies published from 2006 to 2020, which have been identified through a systematic and documented process. This paper addresses five research questions addressing variations in ML-based TSP techniques and feature sets for training and testing ML models, alternative metrics used for evaluating the techniques, the performance of techniques, and the reproducibility of the published studies. We summarize the results related to our research questions in a high-level summary that can be used as a taxonomy for classifying future TSP studies.",Empirical Software Engineering,Springer,pan2022test,10.1007/s10664-021-10066-6,2021-12-14,X,X,,,29,2006-2020,X,Machine learning
2022,"Sadri-Moshkenani, Zahra; Bradley, Justin; Rothermel, Gregg","Survey on test case generation, selection and prioritization for cyber-physical systems","A cyber-physical system (CPS) is a collection of computing devices that communicate with each other, operate in the target environment via actuators and interact with the physical world through sensors in a feedback loop. CPSs need to be safe and reliable and function in accordance with their requirements. Testing, focusing on a CPS model and/or its code, is the primary approach used by engineers to achieve this. Generating, selecting and prioritizing test cases that can reveal faults in CPSs, from the wide range of possible input values and stimuli that affect their operation, are of central importance in this process. To date, however, in our search of the literature, we have found no comprehensive survey of research on test case generation, selection and prioritization for CPSs. In this article, therefore, we report the results of a survey of approaches for generating, selecting and prioritizing test cases for CPSs; the results illustrate the progress that has been made on these approaches to date, the properties that characterize the approaches and the challenges that remain open in these areas of research.","Software Testing, Verification and Reliability",Wiley,sadri2022survey,10.1002/stvr.1794,2021-09-15,X,X,X,,13,2015-2019,X,Cyber-physical